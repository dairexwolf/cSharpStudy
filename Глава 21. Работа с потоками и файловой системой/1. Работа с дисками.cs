// Большинство задач в программировании так или иначе связаны с работой с файлами и каталогами. Нам может потребоваться прочитать текст из файла или наоборот произвести запись, удалить файл или целый каталог, не говоря уже о более комплексных задачах, как например, создание текстового редактора и других подобных задачах.

// Фреймворк .NET предоставляет большие возможности по управлению и манипуляции файлами и каталогами, которые по большей части сосредоточены в пространстве имен System.IO. Классы, расположенные в этом пространстве имен (такие как Stream, StreamWriter, FileStream и др.), позволяют управлять файловым вводом-выводом.

// 												Работа с дисками
// Работу с файловой системой начнем с самого верхнего уровня - дисков. Для представления диска в пространстве имен System.IO имеется класс DriveInfo.

/*
Этот класс имеет статический метод GetDrives, который возвращает имена всех логических дисков компьютера. Также он предоставляет ряд полезных свойств:

 AvailableFreeSpace: указывает на объем доступного свободного места на диске в байтах

 DriveFormat: получает имя файловой системы

 DriveType: представляет тип диска

 IsReady: готов ли диск (например, DVD-диск может быть не вставлен в дисковод)

 Name: получает имя диска

 TotalFreeSpace: получает общий объем свободного места на диске в байтах

 TotalSize: общий размер диска в байтах

 VolumeLabel: получает или устанавливает метку тома
 
 У класса DriveInfo есть еще одно свойство - RootDirectory.
*/

// Получим имена и свойства всех дисков на компьютере:

using System;
using System.IO;

namespace Disk
{
	class Program
	{
		static void Main()
		{
			// Метод GetDrives отображает только те диски (логические), которым назначена буква (а букву можно назначить только разделам с поддерживаемыми файловыми системами)
			DriveInfo[] drives = DriveInfo.GetDrives();
			
			foreach (DriveInfo drive in drives)
			{
				Console.WriteLine($"Название: {drive.Name}");
				Console.WriteLine($"Тип: {drive.DriveType}");
				if (drive.IsReady)
				{
					// Свойства TotalSize и TotalFreeSpace представляют размер в байтах. Для отображения в гигабайтах значение делится на 1073741824 (количество байт в гигабайте, либо сдвигаеться на 30 бит вправо (2³º = 1073741824)
					Console.WriteLine($"Объем диска: {drive.TotalSize}");
					Console.WriteLine($"Свободное пространство: {drive.TotalFreeSpace}");
					Console.WriteLine($"Метка: {drive.Volumelabel}");
				}
				Console.WriteLine();
			}
		}
	}
}


/* 
Хорошо бы упомянуть разницу между AvailableFreeSpace и TotalFreeSpace

TotalFreeSpace - сколько места доступно всем пользователям
AvailableFreeSpace - сколько места доступно текущему пользователю
Quotas - лимиты установленные администратором пк, сколько памяти доступно гостю например.
*/