// В C# 8.0 была добавлена новая функциональность - индексы и диапазоны, которые упрощают получение из массивов подмассивов. Для этого в C# есть два типа: System.Range и System.Index. Оба типа являются структурами. Тип Range представляет некоторый диапазон значений в некоторой последовательность, а тип Index - индекс в последовательности.

//													Индексы
// Индекс фактически представляет числовое значение, и при определении индекса мы можем указать это значение:

Index myInd = 2;	// В данном случае индекс представляет третий элемент последовательности (индексация начинается с 0).

// С помощью специального оператора ^ можно задать индекс относительно конца последовательности.
Index myIndex = ^2; // Теперь индекс представляет второй элемент с конца последовательности, то есть предпоследний элемент.

// Используем индексы для получения элементов массива:
using System.Range;
using System.Index;

Index myInd1 = 2;	// третий элемент
Index myInd2 = ^2;	// предпоследний элемент

string[] people = { "Billy", "Van", "Gachi", "Muchi", "Vichi" };
string sel1 = people[myInd1];	// Gachi
string sel2 = people[myInd2];	// Muchi
Console.WriteLine(sel1);
Console.WriteLine(sel2);

// Все это можно делать и просто так. Единственный плюс - удобочитаемость

// 											Диапазон
// Диапазон представляет часть последовательности, которая ограничена двумя индексами. Начальный индекс включается в диапазон, а конечный индекс НЕ входит в диапазон. Для определения диапазона применяется оператор ..:

Range MyRan = 1..4;	// по 1 индекса включая по 4 индекс не включая его

// В данном случае диапазон myRan влючает элементы с 1 индекса по 4-й индекс (не включая). При этом элемент по 4-му индексу не включается в диапазон. При этом границы диапазона задаются не просто числами, а именно объектами Index. То есть следующие определения диапазонов будут равноценны:

Index start = 1;
Index end = 4;
Range myRan = start..end;
             
Range myRan2 = 1..4;

// Практическое применение диапазонов - получим со второго по четвертый элементы массива:

string[] people = { "Billy", "Van", "Gachi", "Muchi", "Vichi" };
string[] peopleRange = people[1..4];								// получаем 2, 3 и 4 элемент из массива
foreach (var person in peopleRange)
	Console.WriteLine(person);
// Результатом операции people[1..4] является подмассив элементов с 1 по 3 индексы (включая).

// Мы можем задать для диапазона только конечный индекс. В этом случае начальным индексом по умолчанию будет 0.
string[] peopleRange = people[..4];		// Billy, Van, Gachi, Muchi 

// Либо, наоборот, задать только начальный индекс, тогда конечным индексом будет последний индекс последовательности:
string[] peopleRange = people[1..]; 	// Van, Gachi, Muchi, Vichi

// Используя индексы относительно конца последовательности, можно получать диапазон относительно конца последовательности:
string[] pRan1 = people[^2..];		// два последних - Muchi, Vichi
string[] pRan2 = people[..^1];		// начиная с предпоследнего - Billy, Van, Gachi, Muchi
string[] pRan3 = people[^3..^1];	// два начиная с предпоследнего - Gachi, Muchi

// Кроме массивов индексы и диапазоны также применяются к объектам Span и ReadOnlySpan:

string[] people = { "Billy", "Van", "Gachi", "Muchi", "Vichi" };
Span<string> peopleSpan = people;
Span<string> selPeopleSpan = peopleSpan[1..4];
foreach (var person in selPeopleSpan)
	Console.WriteLine(person);